{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","to","Footer","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","deleteTask","method","filter","addtask","headers","body","JSON","stringify","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35243aa7.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n\r\n    return(\r\n        <button onClick={onClick} style={{backgroundColor: color}} className='btn'>\r\n            {text}\r\n        </button>\r\n    ) \r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick = {onAdd} />}\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'task tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n// CSS in JS\r\n// const headingStyle = {\r\n//     color: 'red', backgroundColor:'black'\r\n// }\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick = {() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style = {{color: 'red', cursor:'pointer'}} onClick={() => onDelete(task.id)} /></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\r\n    return (\r\n        <>\r\n         {tasks.map((task) => (\r\n             <Task \r\n             key={task.id} \r\n             task={task} \r\n             onDelete = {onDelete} \r\n             onToggle = {onToggle}/>\r\n         ))}   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [reminder, setReminder] = useState(false);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('please add task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit = {onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input \r\n                    type = 'text' \r\n                    placeholder='Add task' \r\n                    value={text} \r\n                    onChange = {(e) => setText(e.target.value)}/>\r\n            </div>\r\n\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type = 'text' placeholder='Add Day and Time' value = {day} onChange = {(e) => setDay(e.target.value)}/>\r\n            </div>\r\n\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input checked={reminder} type = 'checkbox' value = {reminder} onChange = {(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input type='submit' value = 'Save Task' className='btn btn-block'></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0 </h4>\r\n            <Link to='/'>Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to=\"/about\" >About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\nimport Footer from './components/Footer'\nimport { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n    //fetch tasks, get all tasks from json server\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks');\n      const data = await res.json();\n\n      return data;\n    }\n\n    // fetchtask, get single task from json server\n    const fetchTask = async (id) => {\n      const res = await fetch(`http://localhost:5000/tasks/${id}`);\n      const data = await res.json();\n\n      return data;\n    }\n\n    // Delete Task\n    const deleteTask = async (id) => {\n      await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: 'DELETE',\n      })\n\n      setTasks(tasks.filter((task) => task.id !== id))\n    }\n\n    // Add task\n    const addtask = async (task) => {\n      \n        const res = await fetch ('http://localhost:5000/tasks', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(task)\n        })\n      \n\n      const data = await res.json();\n\n      setTasks([...tasks, data]);\n      // const id = Math.floor(Math.random() * 10000) + 1;\n      // const newTask = {id, ...task}\n      // setTasks([...tasks, newTask])\n    }\n\n    // Toggle Reminder\n    const toggleReminder = async (id) => {\n      const taskToToggle = await fetchTask(id)\n      const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n      const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(updTask),\n      })\n\n      const data = await res.json();\n\n      setTasks(\n        tasks.map((task) => \n                  task.id === id ? {...task, reminder: data.reminder} : task\n                )\n        )\n    }\n\n  return (\n    <Router>\n    <div className=\"container\">\n      <h1></h1>\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd = {showAddTask}/>\n      \n      <Route path='/' exact render = {(props) =>\n        (\n          <>\n              {showAddTask && <AddTask onAdd = {addtask} />}\n              {tasks.length > 0 ? \n                (<Tasks tasks={tasks} onDelete = {deleteTask} onToggle = {toggleReminder} />) \n                  : \n                ('No Tasks for today')\n              }\n          </>\n        )\n      } />\n      <Route path='/about' component={About} />\n      <Footer />\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}